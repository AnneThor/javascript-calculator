{"version":3,"sources":["components/Header.js","components/NumberButton.js","components/FunctionButton.js","components/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","target","NumberButton","props","state","id","this","onClick","e","clicked","value","React","Component","FunctionButton","Calculator","inputArray","index","input","output","lastTotal","handleInputClick","bind","handleOperatorClick","handleClearClick","handleEqualClick","handleKeyDown","prevEqualClick","document","addEventListener","removeEventListener","event","key","regExp","test","setState","decimal","lastEqual","currentArray","currentInput","pop","push","nextValue","regex","prevInput","currentTotal","lastCharacter","stringArray","join","slice","evaluate","displayInput","keyed","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a19c2a23.chunk.js","sourcesContent":["import React from 'react';\nimport '../App.css';\n\nfunction Header() {\n  return (\n    <header className=\"App-header\">\n      <ul className=\"header-nav-bar\">\n        <li className=\"project-title\"><a href=\"https://annethor.github.io/javascript-calculator\">Javascript Calculator</a></li>\n        <li className=\"home\"><a href=\"https://annethor.github.io\" target=\"_\">Back to Portfolio</a></li>\n        <li className=\"author\">Designed & Coded by Anne Thorsteinson</li>\n      </ul>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport '../App.css';\n\nclass NumberButton extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n  render() {\n    return (\n        <button className=\"number-button\"\n             id={this.props.id}\n             onClick={(e) => this.props.clicked(e, this.props.value)}>{this.props.value}</button>\n\n    );\n  }\n\n}\n\nexport default NumberButton;\n","import React from 'react';\nimport '../App.css';\n\nclass FunctionButton extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n\n  render() {\n    return (\n        <button className=\"function-button\"\n             id={this.props.id}\n             onClick={(e) => this.props.clicked(e, this.props.value)}>{this.props.value}</button>\n\n    );\n  }\n\n}\n\nexport default FunctionButton;\n","import React from 'react';\nimport '../App.css';\nimport NumberButton from './NumberButton.js';\nimport FunctionButton from './FunctionButton.js';\nimport {evaluate} from 'mathjs';\n\nclass Calculator extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputArray: ['0'],\n      index: 0,\n      input: true,\n      output: '0',\n      lastTotal: '',\n    }\n    this.handleInputClick = this.handleInputClick.bind(this);\n    this.handleOperatorClick = this.handleOperatorClick.bind(this);\n    this.handleClearClick = this.handleClearClick.bind(this);\n    this.handleEqualClick = this.handleEqualClick.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.prevEqualClick = this.prevEqualClick.bind(this);\n  }\n\n  componentDidMount(){\n    document.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount(){\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  handleKeyDown(event) {\n    let key = event.key;\n    if (key === \"Enter\") {\n      this.handleEqualClick(event);\n      return;\n    }\n    if (key === \".\") {\n      this.handleInputClick(event, key);\n    }\n    if (key === \"C\" || key === \"c\") {\n      this.handleClearClick(event);\n    }\n    let regExp = /[0-9]/;\n    if (regExp.test(key)) {\n      this.handleInputClick(event, key);\n    }\n    regExp = /[-+*/]/;\n    if (regExp.test(key)) {\n      this.handleOperatorClick(event, key);\n    }\n  }\n\n  handleClearClick(event) {\n    this.setState({\n      inputArray: ['0'],\n      input: true,\n      output: '0',\n      decimal: false,\n      lastTotal: '',\n      lastEqual: false,\n    });\n  }\n\n  handleInputClick(event, value) {\n    let currentArray = this.state.inputArray;\n    let currentInput = currentArray.pop();\n    let lastTotal = this.state.lastTotal;\n    let regex = /[-+*/]/;\n    let regexDecimal = /\\./;\n\n    if (currentInput === \"=\") {\n      currentArray = [];\n      currentInput = \"0\";\n    }\n    if ( regex.test(currentInput) ) {\n      currentArray.push(currentInput);\n      currentInput = '';\n    }\n    if ( regexDecimal.test(currentInput) && value === \".\" ) {\n      value='';\n    }\n    if (currentInput === '0' && value === \"0\") {\n      currentArray.push(currentInput);\n      return;\n    } else if ( currentInput==='0') {\n      currentInput = '';\n    }\n    let nextValue = currentInput+value;\n    currentArray.push(nextValue);\n    this.setState({\n      inputArray: currentArray,\n      lastTotal: lastTotal,\n      input: true,\n     });\n  }\n\n  handleOperatorClick(event, value) {\n    let currentArray = this.state.inputArray;\n    let currentInput = currentArray.pop();\n    let lastTotal = this.state.lastTotal;\n    let regex = /[-+*/]/;\n    //if operator is entered before any numerical values\n    //either add zero and then the operator or\n    //if applicable add last total and then the operator\n    if (currentInput === \"=\") {\n      currentArray = [lastTotal];\n      currentArray.push(value);\n      lastTotal= '';\n    } else if (currentInput === '') {\n      currentArray.push(\"0\");\n      currentArray.push(value);\n    //if the last value is an operator, replace the value\n    } else if (regex.test(currentInput)) {\n      if (value === \"-\") {\n        let prevInput = currentArray.pop() ;\n        if (regex.test(prevInput)) {\n          currentArray.push(prevInput);\n          currentArray.push(currentInput);\n        } else {\n          currentArray.push(prevInput);\n          currentArray.push(currentInput);\n          currentArray.push(value);\n        }\n      } else {\n        let prevInput = currentArray.pop();\n        if (regex.test(prevInput)) {\n          currentArray.push(value)\n        } else {\n          currentArray.push(prevInput);\n          currentArray.push(value);\n        }\n      }\n    //otherwise we just need to add the number and then the operator as normal\n    } else {\n      currentArray.push(currentInput);\n      currentArray.push(value);\n    }\n    //now the currentInput in state needs to return to blank update inputArray\n    this.setState({\n      inputArray: currentArray,\n      lastTotal: lastTotal,\n    });\n  }\n\n  prevEqualClick(value) {\n    let currentTotal = this.state.output;\n    this.setState({\n      input: currentTotal + value,\n      lastCharacter: value,\n    })\n  }\n\n  handleEqualClick(event) {\n    let currentArray = this.state.inputArray;\n    let currentInput = currentArray.pop();\n\n    if (currentInput === \"=\") {\n      return;\n    }\n    currentArray.push(currentInput);\n    currentArray.push(\"=\");\n    let stringArray = currentArray.join('');\n    stringArray = stringArray.slice(0,-1);\n    let value = evaluate(stringArray);\n    this.setState({\n      inputArray: currentArray,\n      output: value,\n      lastTotal: value,\n      input: false,\n    })\n\n  }\n\n  displayInput(inputArray) {\n    return inputArray.join(' ');\n  }\n\n  render() {\n    return (\n      <div id=\"calculator-display\">\n\n        <div id=\"display-in-out\">\n          <p id=\"display\">{ this.state.input ? this.displayInput(this.state.inputArray) : this.state.output }</p>\n        </div>\n\n        <button className=\"function-button\" id=\"clear\"\n                onClick={this.handleClearClick}>AC</button>\n\n        <FunctionButton id=\"divide\"\n                        value=\"/\"\n                        clicked={this.handleOperatorClick}/>\n        <FunctionButton id=\"multiply\"\n                        value=\"*\"\n                        clicked={this.handleOperatorClick}/>\n\n        <NumberButton id=\"seven\" value=\"7\"\n                      clicked={this.handleInputClick}\n                      keyed={this.handleKeyDown}/>\n        <NumberButton id=\"eight\" value=\"8\" clicked={this.handleInputClick} />\n        <NumberButton id=\"nine\" value=\"9\" clicked={this.handleInputClick} />\n\n        <FunctionButton id=\"subtract\" value=\"-\" clicked={this.handleOperatorClick}/>\n\n        <NumberButton id=\"four\" value=\"4\" clicked={this.handleInputClick} />\n        <NumberButton id=\"five\" value=\"5\" clicked={this.handleInputClick} />\n        <NumberButton id=\"six\" value=\"6\" clicked={this.handleInputClick} />\n\n        <FunctionButton id=\"add\" value=\"+\" clicked={this.handleOperatorClick}/>\n\n        <NumberButton id=\"one\" value=\"1\" clicked={this.handleInputClick}/>\n        <NumberButton id=\"two\" value=\"2\" clicked={this.handleInputClick}/>\n        <NumberButton id=\"three\" value=\"3\" clicked={this.handleInputClick}/>\n\n        <button className=\"function-button\"\n                id=\"equals\"\n                onClick={this.handleEqualClick}>=</button>\n        <NumberButton id=\"zero\" value=\"0\" clicked={this.handleInputClick}/>\n        <FunctionButton id=\"decimal\" value=\".\" clicked={this.handleInputClick}/>\n\n      </div>\n    )\n  }\n\n\n}\n\nexport default Calculator;\n","import React from 'react';\nimport Header from './components/Header.js';\nimport Calculator from './components/Calculator.js';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <Header />\n      <div className=\"spacer\"></div>\n      <Calculator />\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}